name: Main workflow

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Build
        run: go build cmd/sepp/sepp.go

  go-vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Go vet
        run: go vet ./...
  
  staticcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - uses: dominikh/staticcheck-action@v1.3.0
        with:
          install-go: false
          version: "v0.4.6"
  
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Unit tests
        run: go test -cover ./...
  
  snap-build:
    needs:
      - build
      - go-vet
      - staticcheck
      - lint
      - unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build snap locally
        uses: snapcore/action-build@v1.2.0
        id: snapcraft
      
      - name: Upload locally built snap artifact
        uses: actions/upload-artifact@v4
        with:
          name: snap
          path: ${{ steps.snapcraft.outputs.snap }}

  snap-publish:
    name: Snap publish
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-22.04
    needs: snap-build
    steps:
      - uses: actions/checkout@v4
      - name: Downloads locally built snap artifact
        uses: actions/download-artifact@v4
        id: download
        with:
          name: snap

      - name: Determine snap file name
        id: find-snap
        run: |
          SNAP_FILE=$(ls *.snap)
          echo "Found snap file: $SNAP_FILE"
          echo "snap_file=${SNAP_FILE}" >>$GITHUB_OUTPUT

      - name: publish snap
        uses: snapcore/action-publish@v1.2.0
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
        with:
          snap: ${{ steps.find-snap.outputs.snap_file }}
          release: edge
